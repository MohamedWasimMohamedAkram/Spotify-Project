{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wsmga\\\\Documents\\\\Github\\\\Spotify-Project\\\\src\\\\SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport songData from \"./spotify.json\";\nimport { BrowserRouter as Router, Route, Switch, Link, useHistory, withRouter } from \"react-router-dom\";\nimport Container from \"./Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchPage() {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const history = useHistory();\n  let foundArr = []; // Function to change url\n\n  const changeUrl = () => {\n    history.push(\"/\");\n  }; //Function for results\n\n\n  function searchResults(event) {\n    setSearch(event.target.value);\n\n    for (let i = 0; i < songData.allPlaylists.length; i++) {\n      if (songData.allPlaylists[i].name.toLowerCase().includes(event.target.value.toLowerCase())) {\n        foundArr.push(songData.allPlaylists[i].name);\n      }\n    }\n\n    console.log(foundArr);\n    return foundArr;\n  }\n\n  function showResults() {\n    return console.log(search);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchTop\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: withRouter(Container)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"backButton\",\n        onClick: changeUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          searchResults(e);\n          showResults();\n        },\n        type: \"text\",\n        className: \"SearchInput2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlistLists\",\n      children: songData.allPlaylists.filter(value => {\n        if (value.name.toLowerCase().includes(search.toLowerCase())) {\n          return {\n            value\n          };\n        }\n      }).map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: value.external_urls.spotify,\n          className: \"anchorTag\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SearchResultsPage\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"SearchResultRectangle\",\n              src: \"https://i.imgur.com/eOwktfn.png\",\n              alt: \"Cover Rectangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"ResultCoverImg\",\n              src: value.images[0].url,\n              alt: \"CoverImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"searchedText\",\n              children: value.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"searchedDescription\",\n              children: value.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPage, \"ZLbxxUDL0VzTG1wiJNisrRwVLhs=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/wsmga/Documents/Github/Spotify-Project/src/SearchPage.js"],"names":["React","useState","songData","BrowserRouter","Router","Route","Switch","Link","useHistory","withRouter","Container","SearchPage","search","setSearch","history","foundArr","changeUrl","push","searchResults","event","target","value","i","allPlaylists","length","name","toLowerCase","includes","console","log","showResults","e","filter","map","index","external_urls","spotify","images","url","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport songData from \"./spotify.json\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  useHistory,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport Container from \"./Container\";\r\nfunction SearchPage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const history = useHistory();\r\n  let foundArr = [];\r\n  // Function to change url\r\n  const changeUrl = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  //Function for results\r\n  function searchResults(event) {\r\n    setSearch(event.target.value);\r\n    for (let i = 0; i < songData.allPlaylists.length; i++) {\r\n      if (\r\n        songData.allPlaylists[i].name\r\n          .toLowerCase()\r\n          .includes(event.target.value.toLowerCase())\r\n      ) {\r\n        foundArr.push(songData.allPlaylists[i].name);\r\n      }\r\n    }\r\n    console.log(foundArr);\r\n    return foundArr;\r\n  }\r\n\r\n  function showResults() {\r\n    return console.log(search);\r\n  }\r\n\r\n  return (\r\n    <div className=\"SearchDiv\">\r\n      <div className=\"SearchTop\">\r\n        <Route exact path=\"/\" component={withRouter(Container)} />\r\n        <button className=\"backButton\" onClick={changeUrl} />\r\n        <input\r\n          onChange={(e) => {\r\n            searchResults(e);\r\n            showResults();\r\n          }}\r\n          type=\"text\"\r\n          className=\"SearchInput2\"\r\n        />\r\n      </div>\r\n      <div className=\"playlistLists\">\r\n        {songData.allPlaylists\r\n          .filter((value) => {\r\n            if (value.name.toLowerCase().includes(search.toLowerCase())) {\r\n              return { value };\r\n            }\r\n          })\r\n          .map((value, index) => {\r\n            return (\r\n              <a\r\n                href={value.external_urls.spotify}\r\n                className=\"anchorTag\"\r\n                key={index}\r\n              >\r\n                <div className=\"SearchResultsPage\" key={index}>\r\n                  <img\r\n                    className=\"SearchResultRectangle\"\r\n                    src=\"https://i.imgur.com/eOwktfn.png\"\r\n                    alt=\"Cover Rectangle\"\r\n                  />\r\n                  <img\r\n                    className=\"ResultCoverImg\"\r\n                    src={value.images[0].url}\r\n                    alt=\"CoverImg\"\r\n                  />\r\n                  <p className=\"searchedText\">{value.name}</p>\r\n                  <p className=\"searchedDescription\">{value.description}</p>\r\n                </div>\r\n              </a>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}